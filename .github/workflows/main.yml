name: Deploy to Server

on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configurar chave SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add remote server to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

    - name: Copy files to server
      run: |
        rsync -avz --exclude '.git' ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/${{ secrets.SERVER_USER }}/app

    - name: Deploy with Docker Compose
      run: |
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << EOF
          cd /home/${{ secrets.SERVER_USER }}/app
          sudo docker compose down
          sudo docker compose up -d --build
        EOF

    - name: Generate and push tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        LAST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) || echo "v0.0.0")

        echo "Last tag: $LAST_TAG"
        
        # Extrai a versÃ£o a partir da tag
        VERSION=$(echo $LAST_TAG | sed 's/^v//')
        IFS='.' read -r -a VERSION_ARRAY <<< "$VERSION"

        PATCH=${VERSION_ARRAY[2]}
        PATCH=$((PATCH + 1))

        NEW_TAG="v${VERSION_ARRAY[0]}.${VERSION_ARRAY[1]}.$PATCH"
        git tag $NEW_TAG
        git push origin $NEW_TAG

        echo "New tag $NEW_TAG created and pushed."

